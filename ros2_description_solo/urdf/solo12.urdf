<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from solo12.urdf.xacro              | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="solo">
  <!-- remove if using crane -->
  <!--    <link name="dummy"/>-->
  <!-- This file is based on https://atlas.is.localnet/confluence/display/AMDW/Quadruped+URDF+Files -->
  <link name="base_link">
    <!-- BASE LINK INERTIAL -->
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="1.16115091"/>
      <!-- The base is extremely symmetrical. -->
      <inertia ixx="0.00578574" ixy="0.0" ixz="0.0" iyy="0.01938108" iyz="0.0" izz="0.02476124"/>
    </inertial>
    <!-- BASE LINK VISUAL -->
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///home/stanley/Documents/McGill/robotics/foxy_ws/install/ros2_description_solo/share/ros2_description_solo/meshes/stl/solo12/solo_12_base.stl"/>
      </geometry>
      <material name="grey">
        <color rgba="0.8 0.8 0.8 1.0"/>
      </material>
    </visual>
    <!-- BASE LINK COLLISION -->
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///home/stanley/Documents/McGill/robotics/foxy_ws/install/ros2_description_solo/share/ros2_description_solo/meshes/stl/solo12/solo_12_base.stl"/>
      </geometry>
      <material name="grey">
        <color rgba="0.8 0.8 0.8 1.0"/>
      </material>
    </collision>
    <!-- Bullet specific paramters -->
    <contact>
      <lateral_friction value="1.0"/>
      <restitution value="0.5"/>
    </contact>
  </link>
  <!-- END BASE LINK -->
  <!-- Include the crane if simulation -->
  <!--        <xacro:if value="$(arg use_sim)">-->
  <!--            <xacro:include filename="$(find ros2_description_solo)/urdf/crane.urdf.xacro" />-->
  <!--        </xacro:if>-->
  <!--        <xacro:if value="$(arg use_sim)">-->
  <!--            <xacro:crane parent="base_link" />-->
  <!--        </xacro:if>-->
  <joint name="FL_HAA" type="revolute">
    <parent link="base_link"/>
    <child link="FL_SHOULDER"/>
    <limit effort="1000" lower="-3.14159" upper="3.14159" velocity="2"/>
    <!-- joints rotates around the x-axis -->
    <axis xyz="1 0 0"/>
    <origin rpy="0 0 0" xyz="0.1946 0.08750000000000001 0"/>
    <!-- pybullet simulation parameters -->
    <dynamics damping="0.0" friction="0.0"/>
  </joint>
  <link name="FL_SHOULDER">
    <!-- TODO Update inertias. -->
    <!-- create a dummy shoulder link to join the two joints -->
    <!-- HAA VISUAL -->
    <visual>
      <origin rpy="0 0 0" xyz="0.01950 0 0"/>
      <geometry>
        <mesh filename="file:///home/stanley/Documents/McGill/robotics/foxy_ws/install/ros2_description_solo/share/ros2_description_solo/meshes/stl/solo12/solo12_hip_fe_fl.stl"/>
      </geometry>
      <material name="grey">
        <color rgba="0.8 0.8 0.8 1.0"/>
      </material>
    </visual>
    <!-- HAA LINK COLLISION -->
    <collision>
      <origin rpy="0 0 0" xyz="0.01950 0 0"/>
      <geometry>
        <mesh filename="file:///home/stanley/Documents/McGill/robotics/foxy_ws/install/ros2_description_solo/share/ros2_description_solo/meshes/stl/solo12/solo12_hip_fe_fl.stl"/>
      </geometry>
      <material name="grey">
        <color rgba="0.8 0.8 0.8 1.0"/>
      </material>
    </collision>
    <inertial>
      <mass value="0.14853845"/>
      <!-- HAA body inertia -->
      <origin rpy="0 0 0" xyz="-0.07870700 0.01 0."/>
      <inertia ixx="0.00003024" ixy="0.00004671" ixz="0.0" iyy="0.00041193" iyz="0.0" izz="0.00041107"/>
    </inertial>
  </link>
  <joint name="FL_HFE" type="revolute">
    <parent link="FL_SHOULDER"/>
    <child link="FL_UPPER_LEG"/>
    <limit effort="1000" lower="-3.14159" upper="3.14159" velocity="2"/>
    <!-- joints rotates around the y-axis -->
    <axis xyz="0 1 0"/>
    <origin rpy="0 0 0" xyz="0 0.014 0"/>
    <!-- pybullet simulation parameters -->
    <dynamics damping="0.0" friction="0.0"/>
  </joint>
  <link name="FL_UPPER_LEG">
    <!-- Left upper leg inertia -->
    <inertial>
      <origin rpy="0 0 0" xyz="0.00001377 0.01935853 -0.07870700"/>
      <mass value="0.14853845"/>
      <inertia ixx="0.00041107" ixy="0.0" ixz="0.0" iyy="0.00041193" iyz="0.00004671" izz="0.00003024"/>
    </inertial>
    <!-- UPPER LEG LINK VISUAL -->
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///home/stanley/Documents/McGill/robotics/foxy_ws/install/ros2_description_solo/share/ros2_description_solo/meshes/stl/with_foot/solo_upper_leg_left_side.stl"/>
      </geometry>
      <material name="grey">
        <color rgba="0.8 0.8 0.8 1.0"/>
      </material>
    </visual>
    <!-- UPPER LEG LINK COLLISION -->
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///home/stanley/Documents/McGill/robotics/foxy_ws/install/ros2_description_solo/share/ros2_description_solo/meshes/stl/with_foot/solo_upper_leg_left_side.stl"/>
      </geometry>
      <material name="grey">
        <color rgba="0.8 0.8 0.8 1.0"/>
      </material>
    </collision>
    <!-- Bullet specific paramters -->
    <contact>
      <lateral_friction value="1.0"/>
      <restitution value="0.5"/>
    </contact>
  </link>
  <!-- END UPPER LEG LINK -->
  <!-- KFE Joint between the upper leg and the lower leg -->
  <joint name="FL_KFE" type="revolute">
    <parent link="FL_UPPER_LEG"/>
    <child link="FL_LOWER_LEG"/>
    <limit effort="1000" lower="-3.14159" upper="3.14159" velocity="2"/>
    <!-- joints rotates around the y-axis -->
    <axis xyz="0 1 0"/>
    <origin rpy="0 0 0" xyz="0 0.037450000000000004 -0.16"/>
    <!-- pybullet simulation parameters -->
    <dynamics damping="0.0" friction="0.0"/>
  </joint>
  <link name="FL_LOWER_LEG">
    <!-- Left lower leg inertia -->
    <inertial>
      <origin rpy="0 0 0" xyz="0.0 0.00787644 -0.08928215"/>
      <mass value="0.03070001"/>
      <inertia ixx="0.00012024" ixy="0.0" ixz="0.0" iyy="0.00012029" iyz="0.00000305" izz="0.00000216"/>
    </inertial>
    <!-- LOWER LEG LINK VISUAL -->
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///home/stanley/Documents/McGill/robotics/foxy_ws/install/ros2_description_solo/share/ros2_description_solo/meshes/stl/with_foot/solo_lower_leg_left_side.stl"/>
      </geometry>
      <material name="grey">
        <color rgba="0.8 0.8 0.8 1.0"/>
      </material>
    </visual>
    <!-- LOWER LEG LINK COLLISION -->
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///home/stanley/Documents/McGill/robotics/foxy_ws/install/ros2_description_solo/share/ros2_description_solo/meshes/stl/with_foot/solo_lower_leg_left_side.stl"/>
      </geometry>
      <material name="grey">
        <color rgba="0.8 0.8 0.8 1.0"/>
      </material>
    </collision>
    <!-- Bullet specific paramters -->
    <contact>
      <lateral_friction value="1.0"/>
      <restitution value="0.5"/>
    </contact>
  </link>
  <!-- END LOWER LEG LINK -->
  <!-- KFE Joint between the upper leg and the lower leg -->
  <joint name="FL_ANKLE" type="fixed">
    <parent link="FL_LOWER_LEG"/>
    <child link="FL_FOOT"/>
    <origin rpy="0 0 0" xyz="0 0.008 -0.16"/>
    <!-- Limits (usefull?) -->
    <limit effort="1000" lower="-3.14159" upper="3.14159" velocity="2"/>
    <!-- pybullet simulation parameters -->
    <!--            <dynamics damping="0.0" friction="0.0"/>-->
  </joint>
  <link name="FL_FOOT">
    <!-- FOOT INERTIAL -->
    <!-- This link is symmetrical left or right -->
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0.00035767"/>
      <mass value="0.00693606"/>
      <inertia ixx="0.00000057" ixy="0.0" ixz="0.0" iyy="0.00000084" iyz="0.0" izz="0.00000053"/>
    </inertial>
    <!-- FOOT VISUAL -->
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///home/stanley/Documents/McGill/robotics/foxy_ws/install/ros2_description_solo/share/ros2_description_solo/meshes/stl/with_foot/solo_foot.stl"/>
      </geometry>
      <material name="grey">
        <color rgba="0.8 0.8 0.8 1.0"/>
      </material>
    </visual>
    <!-- FOOT COLLISION -->
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///home/stanley/Documents/McGill/robotics/foxy_ws/install/ros2_description_solo/share/ros2_description_solo/meshes/stl/with_foot/solo_foot.stl"/>
      </geometry>
      <material name="grey">
        <color rgba="0.8 0.8 0.8 1.0"/>
      </material>
      <surface>
        <friction>
          <ode>
            <mu>0.9</mu>
            <mu2>0.9</mu2>
          </ode>
        </friction>
      </surface>
    </collision>
    <!-- Bullet specific paramters -->
    <contact>
      <lateral_friction value="1.0"/>
      <restitution value="0.5"/>
    </contact>
  </link>
  <!-- END LOWER LEG LINK -->
  <!-- Gazebo Parameters -->
  <gazebo reference="FL_SHOULDER">
    <material>Gazebo/White</material>
    <!--            <selfCollide>true</selfCollide>-->
    <gravity>true</gravity>
  </gazebo>
  <gazebo reference="FL_UPPER_LEG">
    <material>Gazebo/White</material>
    <!--            <selfCollide>true</selfCollide>-->
    <gravity>true</gravity>
  </gazebo>
  <gazebo reference="FL_LOWER_LEG">
    <material>Gazebo/White</material>
    <!--            <selfCollide>true</selfCollide>-->
    <gravity>true</gravity>
  </gazebo>
  <gazebo reference="FL_FOOT">
    <material>Gazebo/White</material>
    <!--            <selfCollide>true</selfCollide>-->
    <gravity>true</gravity>
  </gazebo>
  <joint name="FR_HAA" type="revolute">
    <parent link="base_link"/>
    <child link="FR_SHOULDER"/>
    <limit effort="1000" lower="-3.14159" upper="3.14159" velocity="2"/>
    <!-- joints rotates around the x-axis -->
    <axis xyz="1 0 0"/>
    <origin rpy="0 0 0" xyz="0.1946 -0.08750000000000001 0"/>
    <!-- pybullet simulation parameters -->
    <dynamics damping="0.0" friction="0.0"/>
  </joint>
  <link name="FR_SHOULDER">
    <!-- TODO Update inertias. -->
    <!-- create a dummy shoulder link to join the two joints -->
    <!-- HAA VISUAL -->
    <visual>
      <origin rpy="0 0 0" xyz="0.01950 0 0"/>
      <geometry>
        <mesh filename="file:///home/stanley/Documents/McGill/robotics/foxy_ws/install/ros2_description_solo/share/ros2_description_solo/meshes/stl/solo12/solo12_hip_fe_fr.stl"/>
      </geometry>
      <material name="grey">
        <color rgba="0.8 0.8 0.8 1.0"/>
      </material>
    </visual>
    <!-- HAA LINK COLLISION -->
    <collision>
      <origin rpy="0 0 0" xyz="0.01950 0 0"/>
      <geometry>
        <mesh filename="file:///home/stanley/Documents/McGill/robotics/foxy_ws/install/ros2_description_solo/share/ros2_description_solo/meshes/stl/solo12/solo12_hip_fe_fr.stl"/>
      </geometry>
      <material name="grey">
        <color rgba="0.8 0.8 0.8 1.0"/>
      </material>
    </collision>
    <inertial>
      <mass value="0.14853845"/>
      <!-- HAA body inertia -->
      <origin rpy="0 0 0" xyz="-0.07870700 -0.01 0."/>
      <inertia ixx="0.00003024" ixy="-0.00004671" ixz="0.0" iyy="0.00041193" iyz="0.0" izz="0.00041107"/>
    </inertial>
  </link>
  <joint name="FR_HFE" type="revolute">
    <parent link="FR_SHOULDER"/>
    <child link="FR_UPPER_LEG"/>
    <limit effort="1000" lower="-3.14159" upper="3.14159" velocity="2"/>
    <!-- joints rotates around the y-axis -->
    <axis xyz="0 1 0"/>
    <origin rpy="0 0 0" xyz="0 -0.014 0"/>
    <!-- pybullet simulation parameters -->
    <dynamics damping="0.0" friction="0.0"/>
  </joint>
  <link name="FR_UPPER_LEG">
    <!-- Right upper leg inertia -->
    <inertial>
      <origin rpy="0 0 0" xyz="-0.00001377 -0.01935853 -0.07870700"/>
      <mass value="0.14853845"/>
      <inertia ixx="0.00041107" ixy="0.0" ixz="0.0" iyy="0.00041193" iyz="-0.00004671" izz="0.00003024"/>
    </inertial>
    <!-- UPPER LEG LINK VISUAL -->
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///home/stanley/Documents/McGill/robotics/foxy_ws/install/ros2_description_solo/share/ros2_description_solo/meshes/stl/with_foot/solo_upper_leg_right_side.stl"/>
      </geometry>
      <material name="grey">
        <color rgba="0.8 0.8 0.8 1.0"/>
      </material>
    </visual>
    <!-- UPPER LEG LINK COLLISION -->
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///home/stanley/Documents/McGill/robotics/foxy_ws/install/ros2_description_solo/share/ros2_description_solo/meshes/stl/with_foot/solo_upper_leg_right_side.stl"/>
      </geometry>
      <material name="grey">
        <color rgba="0.8 0.8 0.8 1.0"/>
      </material>
    </collision>
    <!-- Bullet specific paramters -->
    <contact>
      <lateral_friction value="1.0"/>
      <restitution value="0.5"/>
    </contact>
  </link>
  <!-- END UPPER LEG LINK -->
  <!-- KFE Joint between the upper leg and the lower leg -->
  <joint name="FR_KFE" type="revolute">
    <parent link="FR_UPPER_LEG"/>
    <child link="FR_LOWER_LEG"/>
    <limit effort="1000" lower="-3.14159" upper="3.14159" velocity="2"/>
    <!-- joints rotates around the y-axis -->
    <axis xyz="0 1 0"/>
    <origin rpy="0 0 0" xyz="0 -0.037450000000000004 -0.16"/>
    <!-- pybullet simulation parameters -->
    <dynamics damping="0.0" friction="0.0"/>
  </joint>
  <link name="FR_LOWER_LEG">
    <!-- Right lower leg inertia -->
    <inertial>
      <origin rpy="0 0 0" xyz="0.0 0.00787644 -0.08928215"/>
      <mass value="0.03070001"/>
      <inertia ixx="0.00012024" ixy="0.0" ixz="0.0" iyy="0.00012029" iyz="-0.00000305" izz="0.00000216"/>
    </inertial>
    <!-- LOWER LEG LINK VISUAL -->
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///home/stanley/Documents/McGill/robotics/foxy_ws/install/ros2_description_solo/share/ros2_description_solo/meshes/stl/with_foot/solo_lower_leg_right_side.stl"/>
      </geometry>
      <material name="grey">
        <color rgba="0.8 0.8 0.8 1.0"/>
      </material>
    </visual>
    <!-- LOWER LEG LINK COLLISION -->
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///home/stanley/Documents/McGill/robotics/foxy_ws/install/ros2_description_solo/share/ros2_description_solo/meshes/stl/with_foot/solo_lower_leg_right_side.stl"/>
      </geometry>
      <material name="grey">
        <color rgba="0.8 0.8 0.8 1.0"/>
      </material>
    </collision>
    <!-- Bullet specific paramters -->
    <contact>
      <lateral_friction value="1.0"/>
      <restitution value="0.5"/>
    </contact>
  </link>
  <!-- END LOWER LEG LINK -->
  <!-- KFE Joint between the upper leg and the lower leg -->
  <joint name="FR_ANKLE" type="fixed">
    <parent link="FR_LOWER_LEG"/>
    <child link="FR_FOOT"/>
    <origin rpy="0 0 0" xyz="0 -0.008 -0.16"/>
    <!-- Limits (usefull?) -->
    <limit effort="1000" lower="-3.14159" upper="3.14159" velocity="2"/>
    <!-- pybullet simulation parameters -->
    <!--            <dynamics damping="0.0" friction="0.0"/>-->
  </joint>
  <link name="FR_FOOT">
    <!-- FOOT INERTIAL -->
    <!-- This link is symmetrical left or right -->
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0.00035767"/>
      <mass value="0.00693606"/>
      <inertia ixx="0.00000057" ixy="0.0" ixz="0.0" iyy="0.00000084" iyz="0.0" izz="0.00000053"/>
    </inertial>
    <!-- FOOT VISUAL -->
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///home/stanley/Documents/McGill/robotics/foxy_ws/install/ros2_description_solo/share/ros2_description_solo/meshes/stl/with_foot/solo_foot.stl"/>
      </geometry>
      <material name="grey">
        <color rgba="0.8 0.8 0.8 1.0"/>
      </material>
    </visual>
    <!-- FOOT COLLISION -->
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///home/stanley/Documents/McGill/robotics/foxy_ws/install/ros2_description_solo/share/ros2_description_solo/meshes/stl/with_foot/solo_foot.stl"/>
      </geometry>
      <material name="grey">
        <color rgba="0.8 0.8 0.8 1.0"/>
      </material>
      <surface>
        <friction>
          <ode>
            <mu>0.9</mu>
            <mu2>0.9</mu2>
          </ode>
        </friction>
      </surface>
    </collision>
    <!-- Bullet specific paramters -->
    <contact>
      <lateral_friction value="1.0"/>
      <restitution value="0.5"/>
    </contact>
  </link>
  <!-- END LOWER LEG LINK -->
  <!-- Gazebo Parameters -->
  <gazebo reference="FR_SHOULDER">
    <material>Gazebo/White</material>
    <!--            <selfCollide>true</selfCollide>-->
    <gravity>true</gravity>
  </gazebo>
  <gazebo reference="FR_UPPER_LEG">
    <material>Gazebo/White</material>
    <!--            <selfCollide>true</selfCollide>-->
    <gravity>true</gravity>
  </gazebo>
  <gazebo reference="FR_LOWER_LEG">
    <material>Gazebo/White</material>
    <!--            <selfCollide>true</selfCollide>-->
    <gravity>true</gravity>
  </gazebo>
  <gazebo reference="FR_FOOT">
    <material>Gazebo/White</material>
    <!--            <selfCollide>true</selfCollide>-->
    <gravity>true</gravity>
  </gazebo>
  <joint name="HL_HAA" type="revolute">
    <parent link="base_link"/>
    <child link="HL_SHOULDER"/>
    <limit effort="1000" lower="-3.14159" upper="3.14159" velocity="2"/>
    <!-- joints rotates around the x-axis -->
    <axis xyz="1 0 0"/>
    <origin rpy="0 0 0" xyz="-0.1946 0.08750000000000001 0"/>
    <!-- pybullet simulation parameters -->
    <dynamics damping="0.0" friction="0.0"/>
  </joint>
  <link name="HL_SHOULDER">
    <!-- TODO Update inertias. -->
    <!-- create a dummy shoulder link to join the two joints -->
    <!-- HAA VISUAL -->
    <visual>
      <origin rpy="0 0 0" xyz="-0.01950 0 0"/>
      <geometry>
        <mesh filename="file:///home/stanley/Documents/McGill/robotics/foxy_ws/install/ros2_description_solo/share/ros2_description_solo/meshes/stl/solo12/solo12_hip_fe_hl.stl"/>
      </geometry>
      <material name="grey">
        <color rgba="0.8 0.8 0.8 1.0"/>
      </material>
    </visual>
    <!-- HAA LINK COLLISION -->
    <collision>
      <origin rpy="0 0 0" xyz="-0.01950 0 0"/>
      <geometry>
        <mesh filename="file:///home/stanley/Documents/McGill/robotics/foxy_ws/install/ros2_description_solo/share/ros2_description_solo/meshes/stl/solo12/solo12_hip_fe_hl.stl"/>
      </geometry>
      <material name="grey">
        <color rgba="0.8 0.8 0.8 1.0"/>
      </material>
    </collision>
    <inertial>
      <mass value="0.14853845"/>
      <!-- HAA body inertia -->
      <origin rpy="0 0 0" xyz="0.07870700 0.01 0."/>
      <inertia ixx="0.00003024" ixy="0.00004671" ixz="0.0" iyy="0.00041193" iyz="0.0" izz="0.00041107"/>
    </inertial>
  </link>
  <joint name="HL_HFE" type="revolute">
    <parent link="HL_SHOULDER"/>
    <child link="HL_UPPER_LEG"/>
    <limit effort="1000" lower="-3.14159" upper="3.14159" velocity="2"/>
    <!-- joints rotates around the y-axis -->
    <axis xyz="0 1 0"/>
    <origin rpy="0 0 0" xyz="0 0.014 0"/>
    <!-- pybullet simulation parameters -->
    <dynamics damping="0.0" friction="0.0"/>
  </joint>
  <link name="HL_UPPER_LEG">
    <!-- Left upper leg inertia -->
    <inertial>
      <origin rpy="0 0 0" xyz="0.00001377 0.01935853 -0.07870700"/>
      <mass value="0.14853845"/>
      <inertia ixx="0.00041107" ixy="0.0" ixz="0.0" iyy="0.00041193" iyz="0.00004671" izz="0.00003024"/>
    </inertial>
    <!-- UPPER LEG LINK VISUAL -->
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///home/stanley/Documents/McGill/robotics/foxy_ws/install/ros2_description_solo/share/ros2_description_solo/meshes/stl/with_foot/solo_upper_leg_left_side.stl"/>
      </geometry>
      <material name="grey">
        <color rgba="0.8 0.8 0.8 1.0"/>
      </material>
    </visual>
    <!-- UPPER LEG LINK COLLISION -->
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///home/stanley/Documents/McGill/robotics/foxy_ws/install/ros2_description_solo/share/ros2_description_solo/meshes/stl/with_foot/solo_upper_leg_left_side.stl"/>
      </geometry>
      <material name="grey">
        <color rgba="0.8 0.8 0.8 1.0"/>
      </material>
    </collision>
    <!-- Bullet specific paramters -->
    <contact>
      <lateral_friction value="1.0"/>
      <restitution value="0.5"/>
    </contact>
  </link>
  <!-- END UPPER LEG LINK -->
  <!-- KFE Joint between the upper leg and the lower leg -->
  <joint name="HL_KFE" type="revolute">
    <parent link="HL_UPPER_LEG"/>
    <child link="HL_LOWER_LEG"/>
    <limit effort="1000" lower="-3.14159" upper="3.14159" velocity="2"/>
    <!-- joints rotates around the y-axis -->
    <axis xyz="0 1 0"/>
    <origin rpy="0 0 0" xyz="0 0.037450000000000004 -0.16"/>
    <!-- pybullet simulation parameters -->
    <dynamics damping="0.0" friction="0.0"/>
  </joint>
  <link name="HL_LOWER_LEG">
    <!-- Left lower leg inertia -->
    <inertial>
      <origin rpy="0 0 0" xyz="0.0 0.00787644 -0.08928215"/>
      <mass value="0.03070001"/>
      <inertia ixx="0.00012024" ixy="0.0" ixz="0.0" iyy="0.00012029" iyz="0.00000305" izz="0.00000216"/>
    </inertial>
    <!-- LOWER LEG LINK VISUAL -->
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///home/stanley/Documents/McGill/robotics/foxy_ws/install/ros2_description_solo/share/ros2_description_solo/meshes/stl/with_foot/solo_lower_leg_left_side.stl"/>
      </geometry>
      <material name="grey">
        <color rgba="0.8 0.8 0.8 1.0"/>
      </material>
    </visual>
    <!-- LOWER LEG LINK COLLISION -->
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///home/stanley/Documents/McGill/robotics/foxy_ws/install/ros2_description_solo/share/ros2_description_solo/meshes/stl/with_foot/solo_lower_leg_left_side.stl"/>
      </geometry>
      <material name="grey">
        <color rgba="0.8 0.8 0.8 1.0"/>
      </material>
    </collision>
    <!-- Bullet specific paramters -->
    <contact>
      <lateral_friction value="1.0"/>
      <restitution value="0.5"/>
    </contact>
  </link>
  <!-- END LOWER LEG LINK -->
  <!-- KFE Joint between the upper leg and the lower leg -->
  <joint name="HL_ANKLE" type="fixed">
    <parent link="HL_LOWER_LEG"/>
    <child link="HL_FOOT"/>
    <origin rpy="0 0 0" xyz="0 0.008 -0.16"/>
    <!-- Limits (usefull?) -->
    <limit effort="1000" lower="-3.14159" upper="3.14159" velocity="2"/>
    <!-- pybullet simulation parameters -->
    <!--            <dynamics damping="0.0" friction="0.0"/>-->
  </joint>
  <link name="HL_FOOT">
    <!-- FOOT INERTIAL -->
    <!-- This link is symmetrical left or right -->
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0.00035767"/>
      <mass value="0.00693606"/>
      <inertia ixx="0.00000057" ixy="0.0" ixz="0.0" iyy="0.00000084" iyz="0.0" izz="0.00000053"/>
    </inertial>
    <!-- FOOT VISUAL -->
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///home/stanley/Documents/McGill/robotics/foxy_ws/install/ros2_description_solo/share/ros2_description_solo/meshes/stl/with_foot/solo_foot.stl"/>
      </geometry>
      <material name="grey">
        <color rgba="0.8 0.8 0.8 1.0"/>
      </material>
    </visual>
    <!-- FOOT COLLISION -->
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///home/stanley/Documents/McGill/robotics/foxy_ws/install/ros2_description_solo/share/ros2_description_solo/meshes/stl/with_foot/solo_foot.stl"/>
      </geometry>
      <material name="grey">
        <color rgba="0.8 0.8 0.8 1.0"/>
      </material>
      <surface>
        <friction>
          <ode>
            <mu>0.9</mu>
            <mu2>0.9</mu2>
          </ode>
        </friction>
      </surface>
    </collision>
    <!-- Bullet specific paramters -->
    <contact>
      <lateral_friction value="1.0"/>
      <restitution value="0.5"/>
    </contact>
  </link>
  <!-- END LOWER LEG LINK -->
  <!-- Gazebo Parameters -->
  <gazebo reference="HL_SHOULDER">
    <material>Gazebo/White</material>
    <!--            <selfCollide>true</selfCollide>-->
    <gravity>true</gravity>
  </gazebo>
  <gazebo reference="HL_UPPER_LEG">
    <material>Gazebo/White</material>
    <!--            <selfCollide>true</selfCollide>-->
    <gravity>true</gravity>
  </gazebo>
  <gazebo reference="HL_LOWER_LEG">
    <material>Gazebo/White</material>
    <!--            <selfCollide>true</selfCollide>-->
    <gravity>true</gravity>
  </gazebo>
  <gazebo reference="HL_FOOT">
    <material>Gazebo/White</material>
    <!--            <selfCollide>true</selfCollide>-->
    <gravity>true</gravity>
  </gazebo>
  <joint name="HR_HAA" type="revolute">
    <parent link="base_link"/>
    <child link="HR_SHOULDER"/>
    <limit effort="1000" lower="-3.14159" upper="3.14159" velocity="2"/>
    <!-- joints rotates around the x-axis -->
    <axis xyz="1 0 0"/>
    <origin rpy="0 0 0" xyz="-0.1946 -0.08750000000000001 0"/>
    <!-- pybullet simulation parameters -->
    <dynamics damping="0.0" friction="0.0"/>
  </joint>
  <link name="HR_SHOULDER">
    <!-- TODO Update inertias. -->
    <!-- create a dummy shoulder link to join the two joints -->
    <!-- HAA VISUAL -->
    <visual>
      <origin rpy="0 0 0" xyz="-0.01950 0 0"/>
      <geometry>
        <mesh filename="file:///home/stanley/Documents/McGill/robotics/foxy_ws/install/ros2_description_solo/share/ros2_description_solo/meshes/stl/solo12/solo12_hip_fe_hr.stl"/>
      </geometry>
      <material name="grey">
        <color rgba="0.8 0.8 0.8 1.0"/>
      </material>
    </visual>
    <!-- HAA LINK COLLISION -->
    <collision>
      <origin rpy="0 0 0" xyz="-0.01950 0 0"/>
      <geometry>
        <mesh filename="file:///home/stanley/Documents/McGill/robotics/foxy_ws/install/ros2_description_solo/share/ros2_description_solo/meshes/stl/solo12/solo12_hip_fe_hr.stl"/>
      </geometry>
      <material name="grey">
        <color rgba="0.8 0.8 0.8 1.0"/>
      </material>
    </collision>
    <inertial>
      <mass value="0.14853845"/>
      <!-- HAA body inertia -->
      <origin rpy="0 0 0" xyz="0.07870700 -0.01 0."/>
      <inertia ixx="0.00003024" ixy="-0.00004671" ixz="0.0" iyy="0.00041193" iyz="0.0" izz="0.00041107"/>
    </inertial>
  </link>
  <joint name="HR_HFE" type="revolute">
    <parent link="HR_SHOULDER"/>
    <child link="HR_UPPER_LEG"/>
    <limit effort="1000" lower="-3.14159" upper="3.14159" velocity="2"/>
    <!-- joints rotates around the y-axis -->
    <axis xyz="0 1 0"/>
    <origin rpy="0 0 0" xyz="0 -0.014 0"/>
    <!-- pybullet simulation parameters -->
    <dynamics damping="0.0" friction="0.0"/>
  </joint>
  <link name="HR_UPPER_LEG">
    <!-- Right upper leg inertia -->
    <inertial>
      <origin rpy="0 0 0" xyz="-0.00001377 -0.01935853 -0.07870700"/>
      <mass value="0.14853845"/>
      <inertia ixx="0.00041107" ixy="0.0" ixz="0.0" iyy="0.00041193" iyz="-0.00004671" izz="0.00003024"/>
    </inertial>
    <!-- UPPER LEG LINK VISUAL -->
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///home/stanley/Documents/McGill/robotics/foxy_ws/install/ros2_description_solo/share/ros2_description_solo/meshes/stl/with_foot/solo_upper_leg_right_side.stl"/>
      </geometry>
      <material name="grey">
        <color rgba="0.8 0.8 0.8 1.0"/>
      </material>
    </visual>
    <!-- UPPER LEG LINK COLLISION -->
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///home/stanley/Documents/McGill/robotics/foxy_ws/install/ros2_description_solo/share/ros2_description_solo/meshes/stl/with_foot/solo_upper_leg_right_side.stl"/>
      </geometry>
      <material name="grey">
        <color rgba="0.8 0.8 0.8 1.0"/>
      </material>
    </collision>
    <!-- Bullet specific paramters -->
    <contact>
      <lateral_friction value="1.0"/>
      <restitution value="0.5"/>
    </contact>
  </link>
  <!-- END UPPER LEG LINK -->
  <!-- KFE Joint between the upper leg and the lower leg -->
  <joint name="HR_KFE" type="revolute">
    <parent link="HR_UPPER_LEG"/>
    <child link="HR_LOWER_LEG"/>
    <limit effort="1000" lower="-3.14159" upper="3.14159" velocity="2"/>
    <!-- joints rotates around the y-axis -->
    <axis xyz="0 1 0"/>
    <origin rpy="0 0 0" xyz="0 -0.037450000000000004 -0.16"/>
    <!-- pybullet simulation parameters -->
    <dynamics damping="0.0" friction="0.0"/>
  </joint>
  <link name="HR_LOWER_LEG">
    <!-- Right lower leg inertia -->
    <inertial>
      <origin rpy="0 0 0" xyz="0.0 0.00787644 -0.08928215"/>
      <mass value="0.03070001"/>
      <inertia ixx="0.00012024" ixy="0.0" ixz="0.0" iyy="0.00012029" iyz="-0.00000305" izz="0.00000216"/>
    </inertial>
    <!-- LOWER LEG LINK VISUAL -->
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///home/stanley/Documents/McGill/robotics/foxy_ws/install/ros2_description_solo/share/ros2_description_solo/meshes/stl/with_foot/solo_lower_leg_right_side.stl"/>
      </geometry>
      <material name="grey">
        <color rgba="0.8 0.8 0.8 1.0"/>
      </material>
    </visual>
    <!-- LOWER LEG LINK COLLISION -->
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///home/stanley/Documents/McGill/robotics/foxy_ws/install/ros2_description_solo/share/ros2_description_solo/meshes/stl/with_foot/solo_lower_leg_right_side.stl"/>
      </geometry>
      <material name="grey">
        <color rgba="0.8 0.8 0.8 1.0"/>
      </material>
    </collision>
    <!-- Bullet specific paramters -->
    <contact>
      <lateral_friction value="1.0"/>
      <restitution value="0.5"/>
    </contact>
  </link>
  <!-- END LOWER LEG LINK -->
  <!-- KFE Joint between the upper leg and the lower leg -->
  <joint name="HR_ANKLE" type="fixed">
    <parent link="HR_LOWER_LEG"/>
    <child link="HR_FOOT"/>
    <origin rpy="0 0 0" xyz="0 -0.008 -0.16"/>
    <!-- Limits (usefull?) -->
    <limit effort="1000" lower="-3.14159" upper="3.14159" velocity="2"/>
    <!-- pybullet simulation parameters -->
    <!--            <dynamics damping="0.0" friction="0.0"/>-->
  </joint>
  <link name="HR_FOOT">
    <!-- FOOT INERTIAL -->
    <!-- This link is symmetrical left or right -->
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0.00035767"/>
      <mass value="0.00693606"/>
      <inertia ixx="0.00000057" ixy="0.0" ixz="0.0" iyy="0.00000084" iyz="0.0" izz="0.00000053"/>
    </inertial>
    <!-- FOOT VISUAL -->
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///home/stanley/Documents/McGill/robotics/foxy_ws/install/ros2_description_solo/share/ros2_description_solo/meshes/stl/with_foot/solo_foot.stl"/>
      </geometry>
      <material name="grey">
        <color rgba="0.8 0.8 0.8 1.0"/>
      </material>
    </visual>
    <!-- FOOT COLLISION -->
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///home/stanley/Documents/McGill/robotics/foxy_ws/install/ros2_description_solo/share/ros2_description_solo/meshes/stl/with_foot/solo_foot.stl"/>
      </geometry>
      <material name="grey">
        <color rgba="0.8 0.8 0.8 1.0"/>
      </material>
      <surface>
        <friction>
          <ode>
            <mu>0.9</mu>
            <mu2>0.9</mu2>
          </ode>
        </friction>
      </surface>
    </collision>
    <!-- Bullet specific paramters -->
    <contact>
      <lateral_friction value="1.0"/>
      <restitution value="0.5"/>
    </contact>
  </link>
  <!-- END LOWER LEG LINK -->
  <!-- Gazebo Parameters -->
  <gazebo reference="HR_SHOULDER">
    <material>Gazebo/White</material>
    <!--            <selfCollide>true</selfCollide>-->
    <gravity>true</gravity>
  </gazebo>
  <gazebo reference="HR_UPPER_LEG">
    <material>Gazebo/White</material>
    <!--            <selfCollide>true</selfCollide>-->
    <gravity>true</gravity>
  </gazebo>
  <gazebo reference="HR_LOWER_LEG">
    <material>Gazebo/White</material>
    <!--            <selfCollide>true</selfCollide>-->
    <gravity>true</gravity>
  </gazebo>
  <gazebo reference="HR_FOOT">
    <material>Gazebo/White</material>
    <!--            <selfCollide>true</selfCollide>-->
    <gravity>true</gravity>
  </gazebo>
  <ros2_control name="SystemSoloRos2Control" type="system">
    <hardware>
      <plugin>gazebo_ros2_control/GazeboSystem</plugin>
    </hardware>
    <!-- HAA -->
    <joint name="FL_HAA">
      <!--        <command_interface name="position">-->
      <!--          <param name="min">-3.1415</param>-->
      <!--          <param name="max">3.1415</param>-->
      <!--        </command_interface>-->
      <!--        <command_interface name="velocity">-->
      <!--          <param name="min">-100</param>-->
      <!--          <param name="max">100</param>-->
      <!--        </command_interface>-->
      <command_interface name="effort">
        <param name="min">-1000</param>
        <param name="max">1000</param>
      </command_interface>
      <command_interface name="gain_kp">
        <param name="min">-1000</param>
        <param name="max">1000</param>
      </command_interface>
      <command_interface name="gain_kd">
        <param name="min">-1000</param>
        <param name="max">1000</param>
      </command_interface>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
      <state_interface name="effort"/>
      <state_interface name="gain_kp"/>
      <state_interface name="gain_kd"/>
    </joint>
    <joint name="FR_HAA">
      <!--        <command_interface name="position">-->
      <!--          <param name="min">-3.1415</param>-->
      <!--          <param name="max">3.1415</param>-->
      <!--        </command_interface>-->
      <!--        <command_interface name="velocity">-->
      <!--          <param name="min">-100</param>-->
      <!--          <param name="max">100</param>-->
      <!--        </command_interface>-->
      <command_interface name="effort">
        <param name="min">-1000</param>
        <param name="max">1000</param>
      </command_interface>
      <command_interface name="gain_kp">
        <param name="min">-1000</param>
        <param name="max">1000</param>
      </command_interface>
      <command_interface name="gain_kd">
        <param name="min">-1000</param>
        <param name="max">1000</param>
      </command_interface>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
      <state_interface name="effort"/>
      <state_interface name="gain_kp"/>
      <state_interface name="gain_kd"/>
    </joint>
    <joint name="HL_HAA">
      <!--        <command_interface name="position">-->
      <!--          <param name="min">-3.1415</param>-->
      <!--          <param name="max">3.1415</param>-->
      <!--        </command_interface>-->
      <!--        <command_interface name="velocity">-->
      <!--          <param name="min">-100</param>-->
      <!--          <param name="max">100</param>-->
      <!--        </command_interface>-->
      <command_interface name="effort">
        <param name="min">-1000</param>
        <param name="max">1000</param>
      </command_interface>
      <command_interface name="gain_kp">
        <param name="min">-1000</param>
        <param name="max">1000</param>
      </command_interface>
      <command_interface name="gain_kd">
        <param name="min">-1000</param>
        <param name="max">1000</param>
      </command_interface>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
      <state_interface name="effort"/>
      <state_interface name="gain_kp"/>
      <state_interface name="gain_kd"/>
    </joint>
    <joint name="HR_HAA">
      <!--        <command_interface name="position">-->
      <!--          <param name="min">-3.1415</param>-->
      <!--          <param name="max">3.1415</param>-->
      <!--        </command_interface>-->
      <!--        <command_interface name="velocity">-->
      <!--          <param name="min">-100</param>-->
      <!--          <param name="max">100</param>-->
      <!--        </command_interface>-->
      <command_interface name="effort">
        <param name="min">-1000</param>
        <param name="max">1000</param>
      </command_interface>
      <command_interface name="gain_kp">
        <param name="min">-1000</param>
        <param name="max">1000</param>
      </command_interface>
      <command_interface name="gain_kd">
        <param name="min">-1000</param>
        <param name="max">1000</param>
      </command_interface>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
      <state_interface name="effort"/>
      <state_interface name="gain_kp"/>
      <state_interface name="gain_kd"/>
    </joint>
    <!-- KFE -->
    <joint name="FL_KFE">
      <!--        <command_interface name="position">-->
      <!--          <param name="min">-100</param>-->
      <!--          <param name="max">100</param>-->
      <!--        </command_interface>-->
      <!--        <command_interface name="velocity">-->
      <!--          <param name="min">-100</param>-->
      <!--          <param name="max">100</param>-->
      <!--        </command_interface>-->
      <command_interface name="effort">
        <param name="min">-1000</param>
        <param name="max">1000</param>
      </command_interface>
      <command_interface name="gain_kp">
        <param name="min">-1000</param>
        <param name="max">1000</param>
      </command_interface>
      <command_interface name="gain_kd">
        <param name="min">-1000</param>
        <param name="max">1000</param>
      </command_interface>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
      <state_interface name="effort"/>
      <state_interface name="gain_kp"/>
      <state_interface name="gain_kd"/>
    </joint>
    <joint name="FR_KFE">
      <!--        <command_interface name="position">-->
      <!--          <param name="min">-100</param>-->
      <!--          <param name="max">100</param>-->
      <!--        </command_interface>-->
      <!--        <command_interface name="velocity">-->
      <!--          <param name="min">-100</param>-->
      <!--          <param name="max">100</param>-->
      <!--        </command_interface>-->
      <command_interface name="effort">
        <param name="min">-1000</param>
        <param name="max">1000</param>
      </command_interface>
      <command_interface name="gain_kp">
        <param name="min">-1000</param>
        <param name="max">1000</param>
      </command_interface>
      <command_interface name="gain_kd">
        <param name="min">-1000</param>
        <param name="max">1000</param>
      </command_interface>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
      <state_interface name="effort"/>
      <state_interface name="gain_kp"/>
      <state_interface name="gain_kd"/>
    </joint>
    <joint name="HL_KFE">
      <!--        <command_interface name="position">-->
      <!--          <param name="min">-100</param>-->
      <!--          <param name="max">100</param>-->
      <!--        </command_interface>-->
      <!--        <command_interface name="velocity">-->
      <!--          <param name="min">-100</param>-->
      <!--          <param name="max">100</param>-->
      <!--        </command_interface>-->
      <command_interface name="effort">
        <param name="min">-1000</param>
        <param name="max">1000</param>
      </command_interface>
      <command_interface name="gain_kp">
        <param name="min">-1000</param>
        <param name="max">1000</param>
      </command_interface>
      <command_interface name="gain_kd">
        <param name="min">-1000</param>
        <param name="max">1000</param>
      </command_interface>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
      <state_interface name="effort"/>
      <state_interface name="gain_kp"/>
      <state_interface name="gain_kd"/>
    </joint>
    <joint name="HR_KFE">
      <!--        <command_interface name="position">-->
      <!--          <param name="min">-100</param>-->
      <!--          <param name="max">100</param>-->
      <!--        </command_interface>-->
      <!--        <command_interface name="velocity">-->
      <!--          <param name="min">-100</param>-->
      <!--          <param name="max">100</param>-->
      <!--        </command_interface>-->
      <command_interface name="effort">
        <param name="min">-1000</param>
        <param name="max">1000</param>
      </command_interface>
      <command_interface name="gain_kp">
        <param name="min">-1000</param>
        <param name="max">1000</param>
      </command_interface>
      <command_interface name="gain_kd">
        <param name="min">-1000</param>
        <param name="max">1000</param>
      </command_interface>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
      <state_interface name="effort"/>
      <state_interface name="gain_kp"/>
      <state_interface name="gain_kd"/>
    </joint>
    <!-- HFE -->
    <joint name="FL_HFE">
      <!--        <command_interface name="position">-->
      <!--          <param name="min">-100</param>-->
      <!--          <param name="max">100</param>-->
      <!--        </command_interface>-->
      <!--        <command_interface name="velocity">-->
      <!--          <param name="min">-100</param>-->
      <!--          <param name="max">100</param>-->
      <!--        </command_interface>-->
      <command_interface name="effort">
        <param name="min">-1000</param>
        <param name="max">1000</param>
      </command_interface>
      <command_interface name="gain_kp">
        <param name="min">-1000</param>
        <param name="max">1000</param>
      </command_interface>
      <command_interface name="gain_kd">
        <param name="min">-1000</param>
        <param name="max">1000</param>
      </command_interface>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
      <state_interface name="effort"/>
      <state_interface name="gain_kp"/>
      <state_interface name="gain_kd"/>
    </joint>
    <joint name="FR_HFE">
      <!--        <command_interface name="position">-->
      <!--          <param name="min">-100</param>-->
      <!--          <param name="max">100</param>-->
      <!--        </command_interface>-->
      <!--        <command_interface name="velocity">-->
      <!--          <param name="min">-100</param>-->
      <!--          <param name="max">100</param>-->
      <!--        </command_interface>-->
      <command_interface name="effort">
        <param name="min">-1000</param>
        <param name="max">1000</param>
      </command_interface>
      <command_interface name="gain_kp">
        <param name="min">-1000</param>
        <param name="max">1000</param>
      </command_interface>
      <command_interface name="gain_kd">
        <param name="min">-1000</param>
        <param name="max">1000</param>
      </command_interface>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
      <state_interface name="effort"/>
      <state_interface name="gain_kp"/>
      <state_interface name="gain_kd"/>
    </joint>
    <joint name="HL_HFE">
      <!--        <command_interface name="position">-->
      <!--          <param name="min">-100</param>-->
      <!--          <param name="max">100</param>-->
      <!--        </command_interface>-->
      <!--        <command_interface name="velocity">-->
      <!--          <param name="min">-100</param>-->
      <!--          <param name="max">100</param>-->
      <!--        </command_interface>-->
      <command_interface name="effort">
        <param name="min">-1000</param>
        <param name="max">1000</param>
      </command_interface>
      <command_interface name="gain_kp">
        <param name="min">-1000</param>
        <param name="max">1000</param>
      </command_interface>
      <command_interface name="gain_kd">
        <param name="min">-1000</param>
        <param name="max">1000</param>
      </command_interface>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
      <state_interface name="effort"/>
      <state_interface name="gain_kp"/>
      <state_interface name="gain_kd"/>
    </joint>
    <joint name="HR_HFE">
      <!--        <command_interface name="position">-->
      <!--          <param name="min">-3.1415</param>-->
      <!--          <param name="max">3.1415</param>-->
      <!--        </command_interface>-->
      <!--        <command_interface name="velocity">-->
      <!--          <param name="min">-100</param>-->
      <!--          <param name="max">100</param>-->
      <!--        </command_interface>-->
      <command_interface name="effort">
        <param name="min">-1000</param>
        <param name="max">1000</param>
      </command_interface>
      <command_interface name="gain_kp">
        <param name="min">-1000</param>
        <param name="max">1000</param>
      </command_interface>
      <command_interface name="gain_kd">
        <param name="min">-1000</param>
        <param name="max">1000</param>
      </command_interface>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
      <state_interface name="effort"/>
      <state_interface name="gain_kp"/>
      <state_interface name="gain_kd"/>
    </joint>
    <sensor name="IMU">
      <state_interface name="gyroscope_x"/>
      <state_interface name="gyroscope_y"/>
      <state_interface name="gyroscope_z"/>
      <state_interface name="accelerometer_x"/>
      <state_interface name="accelerometer_y"/>
      <state_interface name="accelerometer_z"/>
      <state_interface name="linear_acceleration_x"/>
      <state_interface name="linear_acceleration_y"/>
      <state_interface name="linear_acceleration_z"/>
      <state_interface name="attitude_euler_x"/>
      <state_interface name="attitude_euler_y"/>
      <state_interface name="attitude_euler_z"/>
      <state_interface name="attitude_quaternion_x"/>
      <state_interface name="attitude_quaternion_y"/>
      <state_interface name="attitude_quaternion_z"/>
      <state_interface name="attitude_quaternion_w"/>
      <!-- <param name="rotate_vector">1 2 3</param>
        <param name="orientation_vector">1 2 3 4</param> -->
    </sensor>
  </ros2_control>
  <transmission name="FL_HAA_transmission">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="FL_HAA">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="FL_HAA_motor">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>9</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="FR_HAA_transmission">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="FR_HAA">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="FR_HAA_motor">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>9</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="HL_HAA_transmission">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="HL_HAA">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="HL_HAA_motor">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>9</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="HR_HAA_transmission">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="HR_HAA">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="HR_HAA_motor">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>9</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="FL_KFE_transmission">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="FL_KFE">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="FL_KFE_motor">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>9</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="FR_KFE_transmission">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="FR_KFE">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="FR_KFE_motor">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>9</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="HL_KFE_transmission">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="HL_KFE">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="HL_KFE_motor">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>9</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="HR_KFE_transmission">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="HR_KFE">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="HR_KFE_motor">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>9</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="FL_HFE_transmission">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="FL_HFE">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="FL_HFE_motor">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>9</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="FR_HFE_transmission">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="FR_HFE">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="FR_HFE_motor">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>9</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="HL_HFE_transmission">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="HL_HFE">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="HL_HFE_motor">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>9</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="HR_HFE_transmission">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="HR_HFE">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="HR_HFE_motor">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>9</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- remove if using crane -->
  <!--    <joint name="dummy_joint" type="fixed">-->
  <!--        <origin xyz="0 0 0" rpy="0 0 0"/>-->
  <!--&lt;!&ndash;        <parent link="dummy"/>&ndash;&gt;-->
  <!--&lt;!&ndash;        <child link="base_link"/>&ndash;&gt;-->
  <!--                <parent link="base_link"/>-->
  <!--                <child link="dummy"/>-->
  <!--    </joint>-->
  <gazebo reference="base_link">
    <material>Gazebo/White</material>
    <!--        <selfCollide>true</selfCollide>-->
    <!--        <gravity>true</gravity>-->
  </gazebo>
  <gazebo>
    <plugin filename="libgazebo_ros2_control.so" name="gazebo_ros2_control">
      <parameters>/home/stanley/Documents/McGill/robotics/foxy_ws/install/ros2_control_solo_bringup/share/ros2_control_solo_bringup/config/solo_gazebo_forward_controller_position.yaml
            </parameters>
    </plugin>
  </gazebo>
  <!-- IMU Sensor -->
  <!--    <xacro:macro name="box_inertia" params="m w h d">-->
  <!--        <inertial>-->
  <!--            <origin xyz="0 0 0" rpy="${pi/2} 0 ${pi/2}"/>-->
  <!--            <mass value="${m}"/>-->
  <!--            <inertia ixx="${(m/12) * (h*h + d*d)}" ixy="0.0" ixz="0.0" iyy="${(m/12) * (w*w + d*d)}" iyz="0.0"-->
  <!--                     izz="${(m/12) * (w*w + h*h)}"/>-->
  <!--        </inertial>-->
  <!--    </xacro:macro>-->
  <!--    <link name="imu_link">-->
  <!--        <visual>-->
  <!--            <geometry>-->
  <!--                <box size="0.1 0.1 0.1"/>-->
  <!--            </geometry>-->
  <!--        </visual>-->
  <!--        <collision>-->
  <!--            <geometry>-->
  <!--                <box size="0.1 0.1 0.1"/>-->
  <!--            </geometry>-->
  <!--        </collision>-->
  <!--        <xacro:box_inertia m="0.1" w="0.1" d="0.1" h="0.1"/>-->
  <!--    </link>-->
  <!--    <joint name="imu_joint" type="fixed">-->
  <!--        <parent link="base_link"/>-->
  <!--        <child link="imu_link"/>-->
  <!--        <origin xyz="0 0 0.01"/>-->
  <!--    </joint>-->
  <!--    <gazebo reference="imu_link">-->
  <!--        <gravity>true</gravity>-->
  <!--        <sensor name="imu_sensor" type="imu">-->
  <!--            <always_on>true</always_on>-->
  <!--            <update_rate>100</update_rate>-->
  <!--            <visualize>true</visualize>-->
  <!--            <topic>__default_topic__</topic>-->
  <!--            <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">-->
  <!--                <ros>-->
  <!--                    <namespace>/demo</namespace>-->
  <!--                    <remapping>~/out:=imu</remapping>-->
  <!--                </ros>-->
  <!--                &lt;!&ndash;                <topicName>imu</topicName>&ndash;&gt;-->
  <!--                &lt;!&ndash;                <bodyName>imu_link</bodyName>&ndash;&gt;-->
  <!--                &lt;!&ndash;                <updateRateHZ>10.0</updateRateHZ>&ndash;&gt;-->
  <!--                &lt;!&ndash;                <gaussianNoise>0.0</gaussianNoise>&ndash;&gt;-->
  <!--                &lt;!&ndash;                <xyzOffset>0 0 0</xyzOffset>&ndash;&gt;-->
  <!--                &lt;!&ndash;                <rpyOffset>0 0 0</rpyOffset>&ndash;&gt;-->
  <!--                &lt;!&ndash;                <frameName>imu_link</frameName>&ndash;&gt;-->
  <!--                <initialOrientationAsReference>false</initialOrientationAsReference>-->
  <!--            </plugin>-->
  <!--            <imu>-->
  <!--                <angular_velocity>-->
  <!--                    <x>-->
  <!--                        <noise type="gaussian">-->
  <!--                            <mean>0.0</mean>-->
  <!--                            <stddev>2e-4</stddev>-->
  <!--                            <bias_mean>0.0000075</bias_mean>-->
  <!--                            <bias_stddev>0.0000008</bias_stddev>-->
  <!--                        </noise>-->
  <!--                    </x>-->
  <!--                    <y>-->
  <!--                        <noise type="gaussian">-->
  <!--                            <mean>0.0</mean>-->
  <!--                            <stddev>2e-4</stddev>-->
  <!--                            <bias_mean>0.0000075</bias_mean>-->
  <!--                            <bias_stddev>0.0000008</bias_stddev>-->
  <!--                        </noise>-->
  <!--                    </y>-->
  <!--                    <z>-->
  <!--                        <noise type="gaussian">-->
  <!--                            <mean>0.0</mean>-->
  <!--                            <stddev>2e-4</stddev>-->
  <!--                            <bias_mean>0.0000075</bias_mean>-->
  <!--                            <bias_stddev>0.0000008</bias_stddev>-->
  <!--                        </noise>-->
  <!--                    </z>-->
  <!--                </angular_velocity>-->
  <!--                <linear_acceleration>-->
  <!--                    <x>-->
  <!--                        <noise type="gaussian">-->
  <!--                            <mean>0.0</mean>-->
  <!--                            <stddev>1.7e-2</stddev>-->
  <!--                            <bias_mean>0.1</bias_mean>-->
  <!--                            <bias_stddev>0.001</bias_stddev>-->
  <!--                        </noise>-->
  <!--                    </x>-->
  <!--                    <y>-->
  <!--                        <noise type="gaussian">-->
  <!--                            <mean>0.0</mean>-->
  <!--                            <stddev>1.7e-2</stddev>-->
  <!--                            <bias_mean>0.1</bias_mean>-->
  <!--                            <bias_stddev>0.001</bias_stddev>-->
  <!--                        </noise>-->
  <!--                    </y>-->
  <!--                    <z>-->
  <!--                        <noise type="gaussian">-->
  <!--                            <mean>0.0</mean>-->
  <!--                            <stddev>1.7e-2</stddev>-->
  <!--                            <bias_mean>0.1</bias_mean>-->
  <!--                            <bias_stddev>0.001</bias_stddev>-->
  <!--                        </noise>-->
  <!--                    </z>-->
  <!--                </linear_acceleration>-->
  <!--            </imu>-->
  <!--            &lt;!&ndash;            <pose>0 0 0 0 0 0</pose>&ndash;&gt;-->
  <!--        </sensor>-->
  <!--    </gazebo>-->
</robot>
